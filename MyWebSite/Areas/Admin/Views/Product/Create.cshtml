@model MyWebSite.Models.Product
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container-fluid">
    <!-- Page Title with Action Buttons -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">Add New Product</h2>
        <div>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Back to List
            </a>
        </div>
    </div>

    <!-- Product Form Card -->
    <div class="dashboard-card">
		<form asp-action="Create" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @Html.AntiForgeryToken()

            <div class="row">
                <!-- Basic Information -->
                <div class="col-md-6">
                    <h5 class="mb-3">Basic Information</h5>

                    <div class="mb-3">
                        <label asp-for="Name" class="form-label">Product Name</label>
                        <input asp-for="Name" class="form-control" placeholder="Enter product name" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Description" class="form-label">Description</label>
                        <textarea asp-for="Description" class="form-control" rows="5" placeholder="Detailed product description"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="Price" class="form-label">Price ($)</label>
                            <input asp-for="Price" class="form-control" type="number" step="0.01" min="0.01" placeholder="0.00" />
                            <span asp-validation-for="Price" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="CategoryId" class="form-label">Category</label>
                            <div class="input-group">
                                <select asp-for="CategoryId" id="categorySelect" class="form-control" asp-items="ViewBag.Categories">
                                    <option value="">-- Select Category --</option>
                                </select>
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                                    <i class="bi bi-plus"></i>
                                </button>
                            </div>
                            <span asp-validation-for="CategoryId" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <!-- Inventory & Media -->
                <div class="col-md-6">
                    <h5 class="mb-3">Inventory & Media</h5>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="StockQuantity" class="form-label">Stock Quantity</label>
                            <input asp-for="StockQuantity" class="form-control" type="number" min="0" placeholder="0" />
                            <span asp-validation-for="StockQuantity" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="LowStockThreshold" class="form-label">Low Stock Alert</label>
                            <input asp-for="LowStockThreshold" class="form-control" type="number" min="1" placeholder="5" />
                            <span asp-validation-for="LowStockThreshold" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Primary Image</label>
                        <div class="input-group">
                            <input name="imageUrl" type="file" class="form-control" accept="image/*" />
                        </div>
                        <small class="text-muted">Main product image (max 2MB)</small>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Additional Images</label>
                        <div class="input-group">
                            <input name="imageUrls" type="file" multiple class="form-control" accept="image/*" />
                        </div>
                        <small class="text-muted">Up to 5 additional product images</small>
                    </div>
                </div>
            </div>

            <!-- Product Details Section -->
            <h5 class="mt-4 mb-3">Product Details</h5>
            <div class="row">
                <div class="col-md-3 mb-3">
                    <label class="form-label">Color</label>
                    <input name="ProductDetail.Color" class="form-control" placeholder="e.g. Black, Oak, etc." />
                </div>
                <div class="col-md-3 mb-3">
                    <label class="form-label">Material</label>
                    <input name="ProductDetail.Material" class="form-control" placeholder="e.g. Wood, Metal, etc." />
                </div>
                <div class="col-md-3 mb-3">
                    <label class="form-label">Dimensions</label>
                    <input name="ProductDetail.Dimensions" class="form-control" placeholder="e.g. 50x70x100 cm" />
                </div>
                <div class="col-md-3 mb-3">
                    <label class="form-label">Warranty</label>
                    <input name="ProductDetail.Warranty" class="form-control" placeholder="e.g. 1 Year Limited" />
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-3 mb-3">
                    <label class="form-label">Discount (%)</label>
                    <input name="ProductDetail.Discount" type="number" min="0" max="100" class="form-control" placeholder="0" />
                </div>
                <div class="col-md-3 mb-3">
                    <label class="form-label">Available</label>
                    <div class="form-check form-switch mt-2">
                        <!-- Hidden input để gửi false nếu chưa check -->
                        <input type="hidden" name="ProductDetail.IsAvailable" value="false" />

                        <!-- Checkbox -->
                        <input type="checkbox" name="ProductDetail.IsAvailable" class="form-check-input" value="true"
                        @(Model?.ProductDetail?.IsAvailable == true ? "checked" : "") />

                        <label class="form-check-label">Available for purchase</label>


                    </div>
                </div>
            </div>

            <!-- Form Buttons -->
            <div class="d-flex justify-content-end mt-4">
                <button type="reset" class="btn btn-secondary me-2">
                    <i class="bi bi-arrow-counterclockwise"></i> Reset
                </button>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Create Product
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Add Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Đảm bảo form gửi đến endpoint đúng -->
                <form id="categoryForm" method="post" action="@Url.Action("CreateCategory", "Product", new { area = "Admin" })">
                    @Html.AntiForgeryToken()
                    <!-- Category form fields based on Category model -->
                    <div class="mb-3">
                        <label for="categoryName" class="form-label">Category Name</label>
                        <input type="text" class="form-control" id="categoryName" name="Name" maxlength="50" placeholder="Enter category name" required>
                        <div class="invalid-feedback">
                            Category name is required (max 50 characters).
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" id="saveCategory" class="btn btn-primary">
                            <span id="saveCategoryText">Save Category</span>
                            <span id="saveCategorySpinner" class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@if (TempData["CategorySuccess"] != null)
{
    <div class="alert alert-success mt-3">
        @TempData["CategorySuccess"]
    </div>
    <script>
        // Tự động đóng thông báo sau 3 giây
        setTimeout(() => {
            document.querySelector('.alert-success').style.display = 'none';
        }, 3000);
    </script>
}
@if (TempData["CategoryError"] != null)
{
    <div class="alert alert-danger mt-3">
        @TempData["CategoryError"]
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const categoryNameInput = document.getElementById('categoryName');
            const categoryForm = document.getElementById('categoryForm');
            const saveCategoryText = document.getElementById('saveCategoryText');
            const saveCategorySpinner = document.getElementById('saveCategorySpinner');

            // Reset modal when hidden
            $('#addCategoryModal').on('hidden.bs.modal', function () {
                categoryNameInput.value = '';
                categoryNameInput.classList.remove('is-invalid');
            });

            // Validate category name on input
            categoryNameInput.addEventListener('input', function() {
                if (this.value.trim()) {
                    this.classList.remove('is-invalid');
                }
            });

            // Add form submission handler
            categoryForm.addEventListener('submit', function(e) {
                const categoryName = categoryNameInput.value.trim();

                if (!categoryName) {
                    e.preventDefault(); // Prevent form submission
                    categoryNameInput.classList.add('is-invalid');
                    return;
                }

                if (categoryName.length > 50) {
                    e.preventDefault(); // Prevent form submission
                    categoryNameInput.classList.add('is-invalid');
                    return;
                }

                // Show loading spinner
                saveCategoryText.classList.add('d-none');
                saveCategorySpinner.classList.remove('d-none');
                document.getElementById('saveCategory').disabled = true;

                // Let the form submit normally to the server
            });

            // Nếu có thông báo thành công, hiển thị và tự động đóng sau 3 giây
            const successAlert = document.querySelector('.alert-success');
            if (successAlert) {
                setTimeout(() => {
                    successAlert.style.display = 'none';
                }, 3000);
            }
        });
    </script>
}
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}