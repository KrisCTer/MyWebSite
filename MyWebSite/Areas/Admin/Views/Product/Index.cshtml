@model List<MyWebSite.Models.Product>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Products";
    Layout = "_AdminLayout";
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h4 class="mb-0">Product Management</h4>
        <a asp-area="Admin" asp-controller="Product" asp-action="Add" class="btn btn-primary">
            <i class="bi bi-plus"></i> Add Product
        </a>
    </div>

    <!-- Stats Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="dashboard-card">
                <div class="card-header">
                    <h5 class="card-title">Total Products</h5>
                    <div class="card-icon bg-primary">
                        <i class="bi bi-grid"></i>
                    </div>
                </div>
                <h3 class="card-value">@Model.Count</h3>
                <p class="card-label">Active inventory items</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="dashboard-card">
                <div class="card-header">
                    <h5 class="card-title">Low Stock</h5>
                    <div class="card-icon bg-warning">
                        <i class="bi bi-exclamation-triangle"></i>
                    </div>
                </div>
                <h3 class="card-value">@Model.Count(p => p.StockQuantity <= p.LowStockThreshold && p.StockQuantity > 0)</h3>
                <p class="card-label">Products below threshold</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="dashboard-card">
                <div class="card-header">
                    <h5 class="card-title">Out of Stock</h5>
                    <div class="card-icon bg-danger">
                        <i class="bi bi-x-circle"></i>
                    </div>
                </div>
                <h3 class="card-value">@Model.Count(p => p.StockQuantity == 0)</h3>
                <p class="card-label">Products to reorder</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="dashboard-card">
                <div class="card-header">
                    <h5 class="card-title">Avg. Price</h5>
                    <div class="card-icon bg-success">
                        <i class="bi bi-currency-dollar"></i>
                    </div>
                </div>
                <h3 class="card-value">$@(Model.Any() ? Math.Round(Model.Average(p => p.Price), 2) : 0)</h3>
                <p class="card-label">Product price average</p>
            </div>
        </div>
    </div>

    <!-- Filter and Search -->
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="dashboard-card">
                <form asp-action="Index" method="get" class="row g-3">
                    <div class="col-md-3">
                        <label for="searchName" class="form-label">Product Name</label>
                        <input type="text" class="form-control" id="searchName" name="searchName" value="@ViewData["CurrentFilter"]">
                    </div>
                    <div class="col-md-3">
                        <label for="categoryId" class="form-label">Category</label>
                        <select class="form-control" id="categoryId" name="categoryId">
                            <option value="">All Categories</option>
                            @foreach (var category in ViewBag.Categories as IEnumerable<MyWebSite.Models.Category>)
                            {
                                if (ViewBag.CategoryId != null && ViewBag.CategoryId.ToString() == category.Id.ToString())
                                {
                                    <option value="@category.Id" selected>@category.Name</option>
                                }
                                else
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label for="stockStatus" class="form-label">Stock Status</label>
                        <select class="form-control" id="stockStatus" name="stockStatus">
                            <option value="">All Status</option>
                            @if (ViewBag.StockStatus == "instock")
                            {
                                <option value="instock" selected>In Stock</option>
                            }
                            else
                            {
                                <option value="instock">In Stock</option>
                            }

                            @if (ViewBag.StockStatus == "lowstock")
                            {
                                <option value="lowstock" selected>Low Stock</option>
                            }
                            else
                            {
                                <option value="lowstock">Low Stock</option>
                            }

                            @if (ViewBag.StockStatus == "outofstock")
                            {
                                <option value="outofstock" selected>Out of Stock</option>
                            }
                            else
                            {
                                <option value="outofstock">Out of Stock</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <label for="sortOrder" class="form-label">Sort By</label>
                        <select class="form-control" id="sortOrder" name="sortOrder">
                            @if (ViewBag.CurrentSort == "name")
                            {
                                <option value="name" selected>Name (A-Z)</option>
                            }
                            else
                            {
                                <option value="name">Name (A-Z)</option>
                            }

                            @if (ViewBag.CurrentSort == "name_desc")
                            {
                                <option value="name_desc" selected>Name (Z-A)</option>
                            }
                            else
                            {
                                <option value="name_desc">Name (Z-A)</option>
                            }

                            @if (ViewBag.CurrentSort == "price")
                            {
                                <option value="price" selected>Price (Low-High)</option>
                            }
                            else
                            {
                                <option value="price">Price (Low-High)</option>
                            }

                            @if (ViewBag.CurrentSort == "price_desc")
                            {
                                <option value="price_desc" selected>Price (High-Low)</option>
                            }
                            else
                            {
                                <option value="price_desc">Price (High-Low)</option>
                            }

                            @if (ViewBag.CurrentSort == "date")
                            {
                                <option value="date" selected>Newest First</option>
                            }
                            else
                            {
                                <option value="date">Newest First</option>
                            }

                            @if (ViewBag.CurrentSort == "date_desc")
                            {
                                <option value="date_desc" selected>Oldest First</option>
                            }
                            else
                            {
                                <option value="date_desc">Oldest First</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="bi bi-search me-1"></i> Filter
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Products Table -->
    <div class="admin-table mb-4">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th width="60">Image</th>
                        <th>Product Name</th>
                        <th>Category</th>
                        <th>Price</th>
                        <th>Stock</th>
                        <th>Created</th>
                        <th width="150">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in Model)
                    {
                        <tr>
                            <td>
                                @if (!string.IsNullOrEmpty(product.ImageUrl))
                                {
                                    <img src="@product.ImageUrl" alt="@product.Name" class="img-thumbnail" style="width: 50px; height: 50px; object-fit: cover;">
                                }
                                else
                                {
                                    <div class="bg-light d-flex align-items-center justify-content-center" style="width: 50px; height: 50px;">
                                        <i class="bi bi-image text-muted"></i>
                                    </div>
                                }
                            </td>
                            <td>@product.Name</td>
                            <td>@(product.Category?.Name ?? "Uncategorized")</td>
                            <td>$@product.Price.ToString("F2")</td>
                            <td>
                                @if (product.StockQuantity == 0)
                                {
                                    <span class="status-badge status-cancelled">Out of Stock</span>
                                }
                                else if (product.StockQuantity <= product.LowStockThreshold)
                                {
                                    <span class="status-badge status-pending">Low Stock (@product.StockQuantity)</span>
                                }
                                else
                                {
                                    <span class="status-badge status-completed">In Stock (@product.StockQuantity)</span>
                                }
                            </td>
                            <td>@product.CreatedAt.ToString("MMM dd, yyyy")</td>
                            <td>
                                <a asp-action="Details" asp-route-id="@product.Id" class="action-btn">
                                    <i class="bi bi-eye"></i>
                                </a>
                                <a asp-action="Edit" asp-route-id="@product.Id" class="action-btn">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                <button class="action-btn delete" data-bs-toggle="modal" data-bs-target="#deleteProductModal"
                                        data-id="@product.Id" data-name="@product.Name">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Pagination -->
    @if (ViewBag.TotalPages > 1)
    {
        <div class="d-flex justify-content-center">
            <nav>
                <ul class="pagination">
                    @if (ViewBag.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index"
                               asp-route-page="@(ViewBag.CurrentPage - 1)"
                               asp-route-searchName="@ViewData["CurrentFilter"]"
                               asp-route-categoryId="@ViewBag.CategoryId"
                               asp-route-stockStatus="@ViewBag.StockStatus"
                               asp-route-sortOrder="@ViewBag.CurrentSort">
                                Previous
                            </a>
                        </li>
                    }

                    @for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                            <a class="page-link" asp-action="Index"
                               asp-route-page="@i"
                               asp-route-searchName="@ViewData["CurrentFilter"]"
                               asp-route-categoryId="@ViewBag.CategoryId"
                               asp-route-stockStatus="@ViewBag.StockStatus"
                               asp-route-sortOrder="@ViewBag.CurrentSort">
                                @i
                            </a>
                        </li>
                    }

                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index"
                               asp-route-page="@(ViewBag.CurrentPage + 1)"
                               asp-route-searchName="@ViewData["CurrentFilter"]"
                               asp-route-categoryId="@ViewBag.CategoryId"
                               asp-route-stockStatus="@ViewBag.StockStatus"
                               asp-route-sortOrder="@ViewBag.CurrentSort">
                                Next
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    }
</div>

<!-- Delete Product Modal -->
<div class="modal fade" id="deleteProductModal" tabindex="-1" aria-labelledby="deleteProductModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteProductModalLabel">Delete Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="Delete" method="post">
                <div class="modal-body">
                    <input type="hidden" id="deleteProductId" name="id">
                    <p>Are you sure you want to delete the product "<span id="deleteProductName"></span>"?</p>
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle"></i> Warning: This action cannot be undone.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Delete Product Modal
        document.addEventListener('DOMContentLoaded', function () {
            const deleteModal = document.getElementById('deleteProductModal');
            if (deleteModal) {
                deleteModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    const id = button.getAttribute('data-id');
                    const name = button.getAttribute('data-name');

                    const modalIdInput = document.getElementById('deleteProductId');
                    const modalNameSpan = document.getElementById('deleteProductName');

                    modalIdInput.value = id;
                    modalNameSpan.textContent = name;
                });
            }
        });
    </script>
}