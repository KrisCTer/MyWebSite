@using ModernHome
@model PaginatedList<MyWebSite.Models.Product>

@{
    ViewData["Title"] = "Shop All Products";
}

<!-- Hero Section -->
<div class="hero-banner" style="background-color: var(--secondary-accent); padding: 60px 20px;">
    <div class="container">
        <h1>Modern Living, Beautifully Designed</h1>
        <p class="mb-4">Discover furniture that brings comfort and style to your home</p>
        <div class="d-flex justify-content-center">
            <form asp-action="Index" method="get" class="d-flex col-md-6">
                <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" class="form-control me-2" placeholder="Search products..." />
                <button type="submit" class="btn btn-primary">Search</button>
            </form>
        </div>
    </div>
</div>

<!-- Filter and Sort Section -->
<div class="container mt-4">
    <div class="row">
        <div class="col-md-3">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Filter By</h5>
                </div>
                <div class="card-body">
                    <h6>Categories</h6>
                    <div class="mb-3">
                        <div class="form-check">
                            <a class="nav-link" asp-controller="Products" asp-action="Category" asp-route-id="living-room">Living Room</a>
                        </div>
                        <div class="form-check">
                            <a class="nav-link" asp-controller="Products" asp-action="Category" asp-route-id="bedroom">Bedroom</a>
                        </div>
                        <div class="form-check">
                            <a class="nav-link" asp-controller="Products" asp-action="Category" asp-route-id="dining">Dining</a>
                        </div>
                        <div class="form-check">
                            <a class="nav-link" asp-controller="Products" asp-action="Category" asp-route-id="office">Office</a>
                        </div>
                        <div class="form-check">
                            <a class="nav-link" asp-controller="Products" asp-action="Category" asp-route-id="outdoor">Outdoor</a>
                        </div>
                    </div>

                    <h6>Price Range</h6>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="price1">
                            <label class="form-check-label" for="price1">$0 - $100</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="price2">
                            <label class="form-check-label" for="price2">$100 - $500</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="price3">
                            <label class="form-check-label" for="price3">$500 - $1000</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="price4">
                            <label class="form-check-label" for="price4">$1000+</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-9">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h4 class="mb-0">All Products</h4>
                    <p class="text-muted">Showing @Model.Count() of @Model.TotalItems products</p>
                </div>
                <div class="d-flex align-items-center">
                    <label class="me-2">Sort by:</label>
                    <div class="dropdown">
                        <button class="btn btn-outline dropdown-toggle" type="button" id="sortDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                            @(string.IsNullOrEmpty((string)ViewData["CurrentSort"]) ? "Name (A-Z)" :
                                                        ViewData["CurrentSort"].ToString() == "name_desc" ? "Name (Z-A)" :
                                                        ViewData["CurrentSort"].ToString() == "Price" ? "Price (Low to High)" :
                                                        ViewData["CurrentSort"].ToString() == "price_desc" ? "Price (High to Low)" : "Name (A-Z)")
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="sortDropdown">
                            <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name (A-Z)</a></li>
                            <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="name_desc" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name (Z-A)</a></li>
                            <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="Price" asp-route-currentFilter="@ViewData["CurrentFilter"]">Price (Low to High)</a></li>
                            <li><a class="dropdown-item" asp-action="Index" asp-route-sortOrder="price_desc" asp-route-currentFilter="@ViewData["CurrentFilter"]">Price (High to Low)</a></li>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Product Grid -->
            <div class="row">
                @foreach (var product in Model)
                {
                    <div class="col-md-4 mb-4" data-animation-delay="@(Model.IndexOf(product) * 100)">
                        <div class="product-card">
                            <div class="position-relative">
                                <a asp-action="Details" asp-route-id="@product.ProductId">
                                    @if (!string.IsNullOrEmpty(product.ImageUrl))
                                    {
                                        <img src="@product.ImageUrl" alt="@product.Name" class="img-fluid">
                                    }
                                    else if (product.Images != null && product.Images.Any())
                                    {
                                        <img src="@product.Images.First().Url" alt="@product.Name" class="img-fluid">
                                    }
                                    else
                                    {
                                        <img src="/images/placeholder.jpg" alt="@product.Name" class="img-fluid">
                                    }
                                </a>
                                @if (product.ProductDetail != null && product.ProductDetail.Discount > 0)
                                {
                                    <div class="position-absolute top-0 start-0 bg-danger text-white px-2 py-1 m-2 rounded-pill">
                                        -@(product.ProductDetail.Discount)%
                                    </div>
                                }
                            </div>
                            <div class="product-info">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    @if (product.Category != null)
                                    {
                                        <small class="text-muted">@product.Category.Name</small>
                                    }
                                    @if (product.ProductDetail != null && product.ProductDetail.IsAvailable == true)
                                    {
                                        <span class="badge bg-success">In Stock</span>
                                    }
                                    else if (product.ProductDetail != null && product.ProductDetail.IsAvailable == false)
                                    {
                                        <span class="badge bg-secondary">Out of Stock</span>
                                    }
                                </div>
                            </div>
                           
                                <h5 class="product-title">
                                    <a asp-action="Details" asp-route-id="@product.ProductId" class="text-decoration-none text-dark">@product.Name</a>
                                </h5>
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="product-price">
                                        @if (product.ProductDetail != null && product.ProductDetail.Discount > 0)
                                        {
                                            <span class="text-decoration-line-through text-muted me-2">$@product.Price.ToString("F2")</span>
                                            <span class="text-danger">$@((product.Price * (1 - product.ProductDetail.Discount / 100m)).ToString("F2"))</span>
                                        }
                                        else
                                        {
                                            <span>$@product.Price.ToString("F2")</span>
                                        }
                                    </div>
                                    <div>
                                        <span class="text-warning">
                                            <i class="bi bi-star-fill"></i>
                                            <i class="bi bi-star-fill"></i>
                                            <i class="bi bi-star-fill"></i>
                                            <i class="bi bi-star-fill"></i>
                                            <i class="bi bi-star-half"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                
                }
            </div>

            <!-- Pagination -->
            <nav aria-label="Product pagination" class="mt-4">
                <ul class="pagination justify-content-center">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-pageNumber="@(Model.PageIndex - 1)"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                Previous
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">Previous</span>
                        </li>
                    }

                    @for (var i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-pageNumber="@i"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                @i
                            </a>
                        </li>
                    }

                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                               asp-route-pageNumber="@(Model.PageIndex + 1)"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                Next
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">Next</span>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });

        // Add to cart functionality
        document.querySelectorAll('.cart-add-btn').forEach(button => {
            button.addEventListener('click', function() {
                const productId = this.getAttribute('data-id');
                // Add animation
                this.innerHTML = '<i class="bi bi-check"></i>';

                // Here you would normally add AJAX to add the item to cart
                // For demo purposes we'll just show a success message
                setTimeout(() => {
                    this.innerHTML = '<i class="bi bi-bag-plus"></i>';

                    // Show toast notification
                    const toast = document.createElement('div');
                    toast.className = 'position-fixed bottom-0 end-0 p-3';
                    toast.style.zIndex = '11';
                    toast.innerHTML = `
                        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
                            <div class="toast-header">
                                <strong class="me-auto">ModernHome</strong>
                                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                            </div>
                            <div class="toast-body">
                                Product added to your cart!
                            </div>
                        </div>
                    `;
                    document.body.appendChild(toast);

                    setTimeout(() => {
                        document.body.removeChild(toast);
                    }, 3000);
                }, 1000);
            });
        });

        // Wishlist functionality
        document.querySelectorAll('.wishlist-btn').forEach(button => {
            button.addEventListener('click', function() {
                if (this.querySelector('i').classList.contains('bi-heart')) {
                    this.querySelector('i').classList.replace('bi-heart', 'bi-heart-fill');
                    this.querySelector('i').classList.add('text-danger');
                } else {
                    this.querySelector('i').classList.replace('bi-heart-fill', 'bi-heart');
                    this.querySelector('i').classList.remove('text-danger');
                }
            });
        });
    </script>
}